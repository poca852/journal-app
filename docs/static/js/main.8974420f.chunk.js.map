{"version":3,"sources":["types/types.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","firebase/firebase-config.js","helpers/fileUploade.js","helpers/loadNotes.js","actions/notes.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PrivateRoutes.js","routers/PublicRoutes.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","notes","active","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","note","map","id","filter","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","fileUploade","file","a","formDate","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNote","collection","get","notesSnap","forEach","snapHijo","push","data","activeNote","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFireStore","doc","update","refreshNote","Swal","fire","title","deleteNote","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","catch","e","console","log","message","logout","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","value","LoginScreen","useDispatch","useSelector","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailAndPassword","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","Sidebar","signOut","newNote","Date","getTime","add","NotesAppBar","display","files","text","showCancelButton","showConfirmButton","willOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","NothingSelected","JournalScreen","PrivateRoutes","isAuthenticated","Component","props","PublicRoutes","AppRouter","checkin","setCheckin","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8974420f.chunk.js","sourcesContent":["export const types = {\r\n   login: '[Auth] login',\r\n   logout: '[Auth] logout',\r\n\r\n   uiSetError: '[UI] Set Error',\r\n   uiRemoveError: '[UI] Remove Error',\r\n\r\n   uiStartLoading: '[UI] Start loading',\r\n   uiFinishLoading: '[UI] Finish loading',\r\n\r\n   notesAddNew: '[notes] New note',\r\n   notesActive: '[notes] Set active note',\r\n   notesLoad: '[notes] Load notes',\r\n   notesUpdated: '[notes] Updated note',\r\n   notesFileUrl: '[notes] Updated image url',\r\n   notesDelete: '[notes] Delete note',\r\n   notesLogoutCleaning: '[notes] Logout Cleaning'\r\n}","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n   notes: [],\r\n   active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case types.notesActive:\r\n         return {\r\n            ...state,\r\n            active: {\r\n               ...action.payload\r\n            }\r\n         } \r\n\r\n      case types.notesAddNew:\r\n         return{\r\n            ...state,\r\n            notes: [action.payload, ...state.notes]\r\n         }\r\n\r\n      case types.notesLoad:\r\n         return{\r\n            ...state,\r\n            notes: [...action.payload]\r\n         }\r\n   \r\n      case types.notesUpdated:\r\n         return{\r\n            ...state,\r\n            notes: state.notes.map(\r\n               note => note.id === action.payload.id\r\n                  ? action.payload.note\r\n                  : note\r\n            )\r\n         }\r\n\r\n      case types.notesDelete: \r\n         return{\r\n            ...state,\r\n            active: null,\r\n            notes: state.notes.filter(note => note.id !== action.payload)\r\n         }\r\n         \r\n      case types.notesLogoutCleaning:\r\n         return{\r\n            ...state,\r\n            active: null,\r\n            notes: []\r\n         }\r\n\r\n      default:\r\n         return state\r\n   }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n   loading: false,\r\n   msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case types.uiSetError:\r\n         return{\r\n            ...state,\r\n            msgError: action.payload\r\n         }\r\n\r\n      case types.uiRemoveError:\r\n         return{\r\n            ...state,\r\n            msgError: null\r\n         }\r\n\r\n      case types.uiStartLoading:\r\n         return{\r\n            ...state,\r\n            loading: true\r\n         }\r\n\r\n      case types.uiFinishLoading:\r\n         return{\r\n            ...state,\r\n            loading: false\r\n         }\r\n   \r\n      default:\r\n         return state;\r\n   }\r\n}","import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { notesReducer } from \"../reducers/notesReducer\";\r\nimport {uiReducer} from '../reducers/uiReducer'\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nconst reducers = combineReducers({\r\n   auth: authReducer,\r\n   ui: uiReducer,\r\n   note: notesReducer\r\n})\r\n\r\nexport const store = createStore(\r\n   reducers,\r\n   composeEnhancers(\r\n      applyMiddleware(thunk)\r\n   )\r\n);","import { types } from \"../types/types\";\r\n\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n   switch (action.type) {\r\n      case types.login:\r\n         return{\r\n            uid: action.payload.uid,\r\n            name: action.payload.displayName\r\n         }\r\n\r\n      case types.logout:\r\n         return{}\r\n   \r\n      default:\r\n         return state\r\n   }\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst firebaseConfig = {\r\n   apiKey: \"AIzaSyAVOW5C4Or6VWpkHBPpr4-WweS9kQE7EA4\",\r\n   authDomain: \"mi-app-react-17b9b.firebaseapp.com\",\r\n   projectId: \"mi-app-react-17b9b\",\r\n   storageBucket: \"mi-app-react-17b9b.appspot.com\",\r\n   messagingSenderId: \"618946900088\",\r\n   appId: \"1:618946900088:web:47ec23084c97a62e5abd8d\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n   db,\r\n   googleAuthProvider,\r\n   firebase\r\n}","export const fileUploade = async( file ) => {\r\n\r\n   const cloudUrl = `https://api.cloudinary.com/v1_1/dk1nll8jo/image/upload`;\r\n\r\n   const formDate = new FormData();\r\n   formDate.append('upload_preset', 'react-journal');\r\n   formDate.append('file', file);\r\n\r\n   try {\r\n      \r\n      const resp = await fetch(cloudUrl, {\r\n         method: 'POST',\r\n         body: formDate\r\n      });\r\n\r\n      if(resp.ok){\r\n         const cloudResp = await resp.json();\r\n         return cloudResp.secure_url;\r\n      }else{\r\n         throw await resp.json()\r\n      }\r\n\r\n   } catch (err) {\r\n      throw err;\r\n   }\r\n\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\n\r\nexport const loadNote = async ( uid ) => {\r\n   const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n   const notes = [];\r\n\r\n   notesSnap.forEach(snapHijo => {\r\n      notes.push({\r\n         id: snapHijo.id,\r\n         ...snapHijo.data()\r\n      })\r\n   })\r\n\r\n   // console.log(notes);\r\n\r\n   return notes;\r\n}","import Swal from \"sweetalert2\";\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUploade } from \"../helpers/fileUploade\";\r\nimport { loadNote } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startNewNote = () => {\r\n   return async(dispatch, getState) => {\r\n      const {uid} = getState().auth;\r\n\r\n      const newNote = {\r\n         title: '',\r\n         body: '',\r\n         date: new Date().getTime()\r\n      }\r\n\r\n      const doc = await db.collection(`${ uid }/journal/notes`).add(newNote);\r\n      // console.log(doc);\r\n\r\n      dispatch(activeNote(doc.id, newNote));\r\n      dispatch(addNewNote(doc.id, newNote));\r\n   }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n   type: types.notesActive,\r\n   payload: {\r\n      id,\r\n      ...note\r\n   }\r\n})\r\n\r\nexport const addNewNote = (id, note) => ({\r\n   type: types.notesAddNew,\r\n   payload: {\r\n      id, \r\n      ...note\r\n   }\r\n})\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n   return async (dispatch) => {\r\n      const notes = await loadNote(uid);\r\n      dispatch(setNotes(notes))\r\n\r\n   }\r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n   type: types.notesLoad,\r\n   payload: notes\r\n})\r\n\r\nexport const startSaveNote = (note) => {\r\n   return async ( dispatch, getState ) => {\r\n      const { uid } = getState().auth;\r\n\r\n      if(!note.url){\r\n         delete note.url\r\n      }\r\n\r\n      const noteToFireStore = {...note};\r\n      delete noteToFireStore.id;\r\n\r\n      await db.doc(`${ uid }/journal/notes/${ note.id }`).update(noteToFireStore); \r\n      \r\n      dispatch(refreshNote(note.id, noteToFireStore));\r\n      Swal.fire('Saved', note.title, 'success')\r\n   }\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n   type: types.notesUpdated,\r\n   payload: {\r\n      id,\r\n      note: {\r\n         id,\r\n         ...note\r\n      }\r\n   }\r\n})\r\n\r\nexport const startUploading = (file) => {\r\n   return async(dispatch, getState) => {\r\n      const {active: activeNote} = getState().note;\r\n\r\n\r\n      Swal.fire({\r\n         title: 'Uploading...',\r\n         text: 'Plese wait...',\r\n         showCancelButton: false,\r\n         showConfirmButton: false,\r\n         willOpen : () => {\r\n            Swal.showLoading();\r\n         }\r\n      });\r\n      \r\n      const fileUrl = await fileUploade(file);\r\n      activeNote.url = fileUrl;\r\n\r\n      dispatch(startSaveNote(activeNote));\r\n\r\n      Swal.close()\r\n   }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n   return async (dispatch, getState) => {\r\n      const uid = getState().auth.uid;\r\n      await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n      dispatch(deleteNote(id));\r\n   } \r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n   type: types.notesDelete,\r\n   payload: id\r\n}) \r\n\r\nexport const noteLogout = () => ({\r\n   type: types.notesLogoutCleaning\r\n})","import {types} from '../types/types';\r\n\r\n\r\nexport const setError = (err) => ({\r\n   type: types.uiSetError,\r\n   payload: err\r\n})\r\n\r\nexport const removeError = () => ({\r\n   type: types.uiRemoveError\r\n})\r\n\r\n\r\n// modificando el loading del state\r\nexport const startLoading = () => ({\r\n   type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n   type: types.uiFinishLoading\r\n})","import Swal from 'sweetalert2'\r\n\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { types } from '../types/types';\r\nimport { noteLogout } from './notes';\r\nimport { finishLoading, startLoading } from './ui';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n   return (dispatch) => {\r\n\r\n      dispatch(startLoading());\r\n\r\n      firebase.auth().signInWithEmailAndPassword(email, password)\r\n         .then( ({user}) => {\r\n            dispatch(\r\n               login(user.uid, user.displayName)\r\n            );\r\n            dispatch(finishLoading());\r\n         })\r\n         .catch( e => {\r\n            console.log(e)\r\n            dispatch(finishLoading());\r\n            Swal.fire('Error', e.message, 'error');\r\n         })\r\n   }\r\n}\r\n\r\n\r\nexport const startRegisterWithEmailAndPassword = (email, password, name) => {\r\n   return (dispatch) => {\r\n      firebase.auth().createUserWithEmailAndPassword(email, password)\r\n         .then( async({user}) => {\r\n            await user.updateProfile({displayName: name});\r\n            dispatch(\r\n               login(user.uid, user.displayName)\r\n            )\r\n         })\r\n         .catch(e => {\r\n            console.log(e);\r\n            Swal.fire('Error', e.message, 'error');\r\n         })\r\n   }\r\n}\r\n\r\n\r\nexport const startGoogleLogin = () => {\r\n   return (dispatch) => {\r\n      firebase.auth().signInWithPopup(googleAuthProvider)\r\n         .then( ({user}) => {\r\n            dispatch(\r\n               login(user.uid, user.displayName)\r\n            )   \r\n         })\r\n   }\r\n}\r\n\r\n\r\nexport const login = (uid, displayName) => ({\r\n   type: types.login,\r\n   payload: {\r\n      uid,\r\n      displayName\r\n   }\r\n})\r\n\r\nexport const startLogout = () => {\r\n   return async(dispatch) => {\r\n      await firebase.auth().signOut();\r\n\r\n      dispatch(logout());\r\n      dispatch(noteLogout()); \r\n   }\r\n}\r\n\r\nexport const logout = () => ({\r\n   type: types.logout\r\n})","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n    const {loading} = useSelector( state => state.ui );\n\n    const [formValues, handleInputChange] = useForm({\n        email: '',\n        password: ''\n    });\n\n    const {email, password} = formValues;\n\n    // creamos el submit del formulario\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch(startLoginEmailPassword(email, password))\n    }\n\n\n    const handleLoginGoogle = () => {\n        dispatch(startGoogleLogin());\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n\n            <form onSubmit={handleLogin} className='animate__animated animate__fadeIn'>\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={ loading }\n                >\n                    Login\n                </button>\n\n                \n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n\n                    <div \n                        className=\"google-btn\"\n                        onClick={handleLoginGoogle}\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link \n                    to=\"/auth/register\"\n                    className=\"link\"\n                >\n                    Create new account    \n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport validator from 'validator';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeError, setError } from '../../actions/ui';\nimport { startRegisterWithEmailAndPassword } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const {msgError} = useSelector(state => state.ui);\n\n    const [formValues, handleInputChange] = useForm({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    })\n    const {name, email, password, password2} = formValues;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        \n        if(isFormValid()){\n            dispatch(startRegisterWithEmailAndPassword(email, password, name));\n        }\n        \n    }\n\n    const isFormValid = () => {\n        // validavion de formulario para verificar si los campos estan correctos\n\n        if(name.trim().length === 0){\n            dispatch(setError('Name is required'))\n            return false;\n        }else if (!validator.isEmail(email)){\n            dispatch(setError('email is not value'))\n            return false;\n        }else if (password !== password2 || password.length < 5){\n            dispatch(setError('password should be at last 6 characters and match each'))\n            return false;\n        }\n\n        dispatch(removeError());\n        return true;\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n\n            <form onSubmit={handleRegister} className='animate__animated animate__fadeIn'>\n\n                {\n                    msgError &&\n                    <div className='auth__alert-error'>\n                        {msgError}\n                    </div>\n                }\n\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    onChange={handleInputChange}\n                    value={name}\n                />\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    onChange={handleInputChange}\n                    value={email}\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    onChange={handleInputChange}\n                    value={password}\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    onChange={handleInputChange}\n                    value={password2}\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                >\n                    Register\n                </button>\n\n               \n\n                <Link \n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Already registered?\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route \n                        exact\n                        path=\"/auth/login\"\n                        component={ LoginScreen }\n                    />\n\n                    <Route \n                        exact\n                        path=\"/auth/register\"\n                        component={ RegisterScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\n\nexport const JournalEntry = ({id, date, title, body, url}) => {\n\n    const dispatch = useDispatch()\n    const noteDate = moment(date);\n\n    const note = {\n        date,\n        title, \n        body, \n        url\n    }\n\n    const handleEntryClick = () => {\n        dispatch(activeNote(id, note))\n    }\n\n    return (\n        <div \n            className=\"journal__entry pointer animate__animated animate__fadeIn\"\n            onClick={handleEntryClick}\n        >\n            \n            {\n                url &&\n                <div \n                    className=\"journal__entry-picture\"\n                    style={{\n                        backgroundSize: 'cover',\n                        backgroundImage: `url(${url})`\n                    }}\n                >\n                </div>\n            }\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    {title}\n                </p>\n                <p className=\"journal__entry-content\">\n                    {body}\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>{noteDate.format('dddd')}</span>\n                <h4>{noteDate.format('Do')}</h4>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport {useSelector} from 'react-redux'\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    const {notes} = useSelector( state => state.note );\n\n    return (\n        <div className=\"journal__entries\">\n            \n            {\n                notes.map( note => (\n                    <JournalEntry \n                        key={ note.id }\n                        {...note} \n                    />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\nimport { JournalEntries } from './JournalEntries'\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n\n    const {name} = useSelector( state => state.auth );\n\n    const handleLogout = () => {\n        dispatch(startLogout());\n    }\n\n    const handleNewNote = () => {\n        dispatch(startNewNote())\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            \n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> { name}</span>\n                </h3>\n\n                <button className=\"btn\" onClick={handleLogout}>\n                    Logout\n                </button>\n            </div>\n\n            <div className=\"journal__new-entry\" onClick={handleNewNote}>\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    New entry\n                </p>\n            </div>\n\n            <JournalEntries />    \n\n        </aside>\n    )\n}\n","import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { startSaveNote, startUploading } from '../../actions/notes';\n\nexport const NotesAppBar = () => {\n\n    const {active} = useSelector( state => state.note );\n\n    const dispatch = useDispatch();\n\n    const handleSave = () => {\n        dispatch(startSaveNote(active));\n    }\n\n    const handleClickPicture = () => {\n        document.querySelector('#selectorFile').click();\n\n    }\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        if(file){\n            dispatch(startUploading(file))\n        }\n    }   \n\n    return (\n        <div className=\"notes__appbar\">\n            <span>28 de agosto 2020</span>\n\n            <input \n                id='selectorFile'\n                type='file'\n                name='file'\n                style={{display: 'none'}}\n                onChange={handleFileChange}\n            />\n\n            <div>\n                <button \n                    className=\"btn\"\n                    onClick={handleClickPicture}\n                >\n                    Picture\n                </button>\n\n                <button className=\"btn\" onClick={handleSave}>\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { activeNote, startDeleting } from '../../actions/notes';\nimport { useForm } from '../../hooks/useForm';\nimport { NotesAppBar } from './NotesAppBar'\n\nexport const NoteScreen = () => {\n\n    const { active:note } = useSelector( state => state.note );\n    const dispatch = useDispatch()\n\n    const [ formValues, handleInputChange, reset ] = useForm( note );\n    const { title, body, id } = formValues;\n\n    const activeId = useRef( note.id )\n\n    useEffect( () => {\n        \n        if( note.id !== activeId.current ){\n            reset( note );\n            activeId.current = note.id\n        }\n\n    }, [ note, reset ]);\n\n    useEffect( () => {\n\n        dispatch( activeNote( formValues.id, { ...formValues } ) );\n\n    }, [ formValues, dispatch ])\n\n    const handleDelete = () => {\n        dispatch(startDeleting(id))\n    }\n\n    return (\n        <div className=\"notes__main-content\">\n            \n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    onChange={ handleInputChange }\n                    value={ title }\n                    name='title'\n                />\n\n                <textarea\n                    placeholder=\"What happened today\"\n                    className=\"notes__textarea\"\n                    onChange={ handleInputChange }\n                    value={ body }\n                    name='body'\n                ></textarea>\n\n               { \n                    note.url &&\n                    <div className=\"notes__image\">\n                        <img \n                            src={ note.url }\n                            alt=\"imagen\"\n                        />\n                    </div>\n                }\n\n\n            </div>\n\n            <button\n                className='btn btn-danger'\n                onClick={ handleDelete }\n            >\n                Delete\n            </button>\n\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something\n                <br />\n                pr create an entry!\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { Sidebar } from './Sidebar';\nimport {useSelector} from 'react-redux'\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { NothingSelected } from './NothingSelected';\n\n\nexport const JournalScreen = () => {\n\n    const {active} = useSelector( state => state.note );\n\n    return (\n        <div className=\"journal__main-content animate__animated animate__fadeIn\">\n            \n            <Sidebar />\n\n\n            <main>\n    \n                {\n                    (active)\n                        ?(<NoteScreen />)\n                        :(<NothingSelected />)\n                }\n\n            </main>\n\n\n        </div>\n    )\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoutes = ({\r\n   isAuthenticated,\r\n   component: Component,\r\n   ...rest\r\n}) => {\r\n   return (\r\n      <Route\r\n         component={(props) => (\r\n            (isAuthenticated)\r\n               ? (<Component {...props} />)\r\n               : (<Redirect to='/auth/login' />)\r\n         )}         \r\n      />\r\n   )\r\n}\r\n\r\n\r\nPrivateRoutes.propTypes = {\r\n   isAuthenticated: PropTypes.bool.isRequired,\r\n   component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const PublicRoutes = ({\r\n   isAuthenticated,\r\n   component: Component,\r\n   ...rest\r\n}) => {\r\n   return (\r\n      <Route\r\n         component={(props) => (\r\n            (!isAuthenticated)\r\n               ?(<Component {...props} />)\r\n               :(<Redirect to='/' />)\r\n         )} \r\n      />\r\n   )\r\n}\r\n\r\nPublicRoutes.propTypes ={\r\n   isAuthenticated: PropTypes.bool.isRequired,\r\n   component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\nimport {useDispatch} from 'react-redux';\nimport {firebase} from '../firebase/firebase-config';   \n\nimport { AuthRouter } from './AuthRouter';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { login } from '../actions/auth';\nimport { PrivateRoutes } from './PrivateRoutes';\nimport { PublicRoutes } from './PublicRoutes';\nimport { startLoadingNotes } from '../actions/notes';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const [checkin, setCheckin] = useState(true);\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged( async (user) => {\n            if(user?.uid){\n                dispatch(login(user.uid, user.displayName));\n                setIsLoggedIn(true);\n                dispatch(startLoadingNotes(user.uid))\n            }else{\n                setIsLoggedIn(false)\n            }\n\n            setCheckin(false)\n        })\n    }, [dispatch, setCheckin, setIsLoggedIn])\n\n    if(checkin){\n        return (\n            <h1>Espere...</h1>\n        )\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoutes \n                        path=\"/auth\"\n                        component={ AuthRouter }\n                        isAuthenticated={isLoggedIn}\n                    />\n\n                    <PrivateRoutes \n                        exact\n                        path=\"/\"\n                        component={ JournalScreen }\n                        isAuthenticated={isLoggedIn}\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport { AppRouter } from './routers/AppRouter';\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\n// react-journal\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}